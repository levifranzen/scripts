#### Criado por OpenSea ####
####### u.nu/opensea #######

### Os comandos devem ser rodados diretamente no Shell (Copia e cola) e não através de script, informe as variaveis antes de colar ###

### Aquisição de variaveis ###
export domainname=example.com
export letsencryptmail=admin@example.com

mkdir -p /docker/nginx/
echo 'server {
    listen      80;
    listen [::]:80;
    server_name $SERVER;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    location ^~ /.well-known {
        allow all;
        root /data/letsencrypt;
    }
}' > /docker/nginx/letsencrypt.conf
docker network create -d bridge production
docker run --name nginx -p 80:80 -p 443:443 -v /docker/nginx/:/etc/nginx/conf.d -v /docker/letsencrypt/data:/data/letsencrypt -v /docker/letsencrypt:/etc/letsencrypt -d nginx:1.15.5-alpine 
docker run -it --rm -v /docker/letsencrypt:/etc/letsencrypt -v /docker/letsencrypt/data:/data/letsencrypt deliverous/certbot certonly --email $letsencryptmail --agree-tos --webroot --webroot-path=/data/letsencrypt -d $domainname
N
docker network disconnect bridge nginx 
docker network connect production nginx 
echo "# Upstream
upstream backend {
    server portainer:9000;
}

# HTTPS Server
server {
    listen 443 ssl;
    server_name $domainname;

    ssl_certificate /etc/letsencrypt/live/$domainname/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$domainname/privkey.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # don’t use SSLv3 ref: POODLE

    access_log                /dev/stdout;
    error_log                 /dev/stderr info;

    location / {
        proxy_pass http://backend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forward-Proto http;
        proxy_set_header X-Nginx-Proxy true;

        proxy_redirect off;
    }
}" > $domainname
docker run -d --name portainer --network=production -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer
docker restart nginx
